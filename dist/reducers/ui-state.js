"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = exports.uiStateReducerFactory = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _reduxActions = require("redux-actions");

var _actionTypes = _interopRequireDefault(require("../constants/action-types"));

var uiStateUpdaters = _interopRequireWildcard(require("./ui-state-updaters"));

var _actionHandler;

/**
 * Important: Do not rename `actionHandler` or the assignment pattern of property value.
 * It is used to generate documentation
 */
var actionHandler = (_actionHandler = {}, (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_SIDE_PANEL, uiStateUpdaters.toggleSidePanelUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_MODAL, uiStateUpdaters.toggleModalUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SHOW_EXPORT_DROPDOWN, uiStateUpdaters.showExportDropdownUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].HIDE_EXPORT_DROPDOWN, uiStateUpdaters.hideExportDropdownUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].OPEN_DELETE_MODAL, uiStateUpdaters.openDeleteModalUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_MAP_CONTROL, uiStateUpdaters.toggleMapControlUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].ADD_NOTIFICATION, uiStateUpdaters.addNotificationUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].REMOVE_NOTIFICATION, uiStateUpdaters.removeNotificationUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_RATIO, uiStateUpdaters.setRatioUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_RESOLUTION, uiStateUpdaters.setResolutionUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].TOGGLE_LEGEND, uiStateUpdaters.toggleLegendUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].START_EXPORTING_IMAGE, uiStateUpdaters.startExportingImage), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_IMAGE_DATA_URI, uiStateUpdaters.setExportImageDataUri), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_IMAGE_ERROR, uiStateUpdaters.setExportImageError), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].CLEANUP_EXPORT_IMAGE, uiStateUpdaters.cleanupExportImage), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_SELECTED_DATASET, uiStateUpdaters.setExportSelectedDatasetUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_DATA_TYPE, uiStateUpdaters.setExportDataTypeUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_FILTERED, uiStateUpdaters.setExportFilteredUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_DATA, uiStateUpdaters.setExportDataUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_USER_MAPBOX_ACCESS_TOKEN, uiStateUpdaters.setUserMapboxAccessTokenUpdater), (0, _defineProperty2["default"])(_actionHandler, _actionTypes["default"].SET_EXPORT_MAP_FORMAT, uiStateUpdaters.setExportMapFormat), _actionHandler);
/* Reducer */

var uiStateReducerFactory = function uiStateReducerFactory() {
  var initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return (0, _reduxActions.handleActions)(actionHandler, (0, _objectSpread2["default"])({}, uiStateUpdaters.INITIAL_UI_STATE, initialState, {
    initialState: initialState
  }));
};

exports.uiStateReducerFactory = uiStateReducerFactory;

var _default = uiStateReducerFactory();

exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9yZWR1Y2Vycy91aS1zdGF0ZS5qcyJdLCJuYW1lcyI6WyJhY3Rpb25IYW5kbGVyIiwiQWN0aW9uVHlwZXMiLCJUT0dHTEVfU0lERV9QQU5FTCIsInVpU3RhdGVVcGRhdGVycyIsInRvZ2dsZVNpZGVQYW5lbFVwZGF0ZXIiLCJUT0dHTEVfTU9EQUwiLCJ0b2dnbGVNb2RhbFVwZGF0ZXIiLCJTSE9XX0VYUE9SVF9EUk9QRE9XTiIsInNob3dFeHBvcnREcm9wZG93blVwZGF0ZXIiLCJISURFX0VYUE9SVF9EUk9QRE9XTiIsImhpZGVFeHBvcnREcm9wZG93blVwZGF0ZXIiLCJPUEVOX0RFTEVURV9NT0RBTCIsIm9wZW5EZWxldGVNb2RhbFVwZGF0ZXIiLCJUT0dHTEVfTUFQX0NPTlRST0wiLCJ0b2dnbGVNYXBDb250cm9sVXBkYXRlciIsIkFERF9OT1RJRklDQVRJT04iLCJhZGROb3RpZmljYXRpb25VcGRhdGVyIiwiUkVNT1ZFX05PVElGSUNBVElPTiIsInJlbW92ZU5vdGlmaWNhdGlvblVwZGF0ZXIiLCJTRVRfUkFUSU8iLCJzZXRSYXRpb1VwZGF0ZXIiLCJTRVRfUkVTT0xVVElPTiIsInNldFJlc29sdXRpb25VcGRhdGVyIiwiVE9HR0xFX0xFR0VORCIsInRvZ2dsZUxlZ2VuZFVwZGF0ZXIiLCJTVEFSVF9FWFBPUlRJTkdfSU1BR0UiLCJzdGFydEV4cG9ydGluZ0ltYWdlIiwiU0VUX0VYUE9SVF9JTUFHRV9EQVRBX1VSSSIsInNldEV4cG9ydEltYWdlRGF0YVVyaSIsIlNFVF9FWFBPUlRfSU1BR0VfRVJST1IiLCJzZXRFeHBvcnRJbWFnZUVycm9yIiwiQ0xFQU5VUF9FWFBPUlRfSU1BR0UiLCJjbGVhbnVwRXhwb3J0SW1hZ2UiLCJTRVRfRVhQT1JUX1NFTEVDVEVEX0RBVEFTRVQiLCJzZXRFeHBvcnRTZWxlY3RlZERhdGFzZXRVcGRhdGVyIiwiU0VUX0VYUE9SVF9EQVRBX1RZUEUiLCJzZXRFeHBvcnREYXRhVHlwZVVwZGF0ZXIiLCJTRVRfRVhQT1JUX0ZJTFRFUkVEIiwic2V0RXhwb3J0RmlsdGVyZWRVcGRhdGVyIiwiU0VUX0VYUE9SVF9EQVRBIiwic2V0RXhwb3J0RGF0YVVwZGF0ZXIiLCJTRVRfVVNFUl9NQVBCT1hfQUNDRVNTX1RPS0VOIiwic2V0VXNlck1hcGJveEFjY2Vzc1Rva2VuVXBkYXRlciIsIlNFVF9FWFBPUlRfTUFQX0ZPUk1BVCIsInNldEV4cG9ydE1hcEZvcm1hdCIsInVpU3RhdGVSZWR1Y2VyRmFjdG9yeSIsImluaXRpYWxTdGF0ZSIsIklOSVRJQUxfVUlfU1RBVEUiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQW9CQTs7QUFDQTs7QUFDQTs7OztBQUVBOzs7O0FBSUEsSUFBTUEsYUFBYSwwRUFDaEJDLHdCQUFZQyxpQkFESSxFQUNnQkMsZUFBZSxDQUFDQyxzQkFEaEMsb0RBRWhCSCx3QkFBWUksWUFGSSxFQUVXRixlQUFlLENBQUNHLGtCQUYzQixvREFHaEJMLHdCQUFZTSxvQkFISSxFQUdtQkosZUFBZSxDQUFDSyx5QkFIbkMsb0RBSWhCUCx3QkFBWVEsb0JBSkksRUFJbUJOLGVBQWUsQ0FBQ08seUJBSm5DLG9EQUtoQlQsd0JBQVlVLGlCQUxJLEVBS2dCUixlQUFlLENBQUNTLHNCQUxoQyxvREFNaEJYLHdCQUFZWSxrQkFOSSxFQU1pQlYsZUFBZSxDQUFDVyx1QkFOakMsb0RBT2hCYix3QkFBWWMsZ0JBUEksRUFPZVosZUFBZSxDQUFDYSxzQkFQL0Isb0RBUWhCZix3QkFBWWdCLG1CQVJJLEVBUWtCZCxlQUFlLENBQUNlLHlCQVJsQyxvREFVaEJqQix3QkFBWWtCLFNBVkksRUFVUWhCLGVBQWUsQ0FBQ2lCLGVBVnhCLG9EQVdoQm5CLHdCQUFZb0IsY0FYSSxFQVdhbEIsZUFBZSxDQUFDbUIsb0JBWDdCLG9EQVloQnJCLHdCQUFZc0IsYUFaSSxFQVlZcEIsZUFBZSxDQUFDcUIsbUJBWjVCLG9EQWFoQnZCLHdCQUFZd0IscUJBYkksRUFhb0J0QixlQUFlLENBQUN1QixtQkFicEMsb0RBY2hCekIsd0JBQVkwQix5QkFkSSxFQWN3QnhCLGVBQWUsQ0FBQ3lCLHFCQWR4QyxvREFlaEIzQix3QkFBWTRCLHNCQWZJLEVBZXFCMUIsZUFBZSxDQUFDMkIsbUJBZnJDLG9EQWdCaEI3Qix3QkFBWThCLG9CQWhCSSxFQWdCbUI1QixlQUFlLENBQUM2QixrQkFoQm5DLG9EQWtCaEIvQix3QkFBWWdDLDJCQWxCSSxFQWtCMEI5QixlQUFlLENBQUMrQiwrQkFsQjFDLG9EQW1CaEJqQyx3QkFBWWtDLG9CQW5CSSxFQW1CbUJoQyxlQUFlLENBQUNpQyx3QkFuQm5DLG9EQW9CaEJuQyx3QkFBWW9DLG1CQXBCSSxFQW9Ca0JsQyxlQUFlLENBQUNtQyx3QkFwQmxDLG9EQXFCaEJyQyx3QkFBWXNDLGVBckJJLEVBcUJjcEMsZUFBZSxDQUFDcUMsb0JBckI5QixvREFzQmhCdkMsd0JBQVl3Qyw0QkF0QkksRUFzQjJCdEMsZUFBZSxDQUFDdUMsK0JBdEIzQyxvREF1QmhCekMsd0JBQVkwQyxxQkF2QkksRUF1Qm9CeEMsZUFBZSxDQUFDeUMsa0JBdkJwQyxrQkFBbkI7QUEwQkE7O0FBQ08sSUFBTUMscUJBQXFCLEdBQUcsU0FBeEJBLHFCQUF3QjtBQUFBLE1BQUNDLFlBQUQsdUVBQWdCLEVBQWhCO0FBQUEsU0FDbkMsaUNBQWM5QyxhQUFkLHFDQUFpQ0csZUFBZSxDQUFDNEMsZ0JBQWpELEVBQXNFRCxZQUF0RTtBQUFvRkEsSUFBQUEsWUFBWSxFQUFaQTtBQUFwRixLQURtQztBQUFBLENBQTlCOzs7O2VBR1FELHFCQUFxQixFIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ29weXJpZ2h0IChjKSAyMDE5IFViZXIgVGVjaG5vbG9naWVzLCBJbmMuXG4vL1xuLy8gUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weVxuLy8gb2YgdGhpcyBzb2Z0d2FyZSBhbmQgYXNzb2NpYXRlZCBkb2N1bWVudGF0aW9uIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbFxuLy8gaW4gdGhlIFNvZnR3YXJlIHdpdGhvdXQgcmVzdHJpY3Rpb24sIGluY2x1ZGluZyB3aXRob3V0IGxpbWl0YXRpb24gdGhlIHJpZ2h0c1xuLy8gdG8gdXNlLCBjb3B5LCBtb2RpZnksIG1lcmdlLCBwdWJsaXNoLCBkaXN0cmlidXRlLCBzdWJsaWNlbnNlLCBhbmQvb3Igc2VsbFxuLy8gY29waWVzIG9mIHRoZSBTb2Z0d2FyZSwgYW5kIHRvIHBlcm1pdCBwZXJzb25zIHRvIHdob20gdGhlIFNvZnR3YXJlIGlzXG4vLyBmdXJuaXNoZWQgdG8gZG8gc28sIHN1YmplY3QgdG8gdGhlIGZvbGxvd2luZyBjb25kaXRpb25zOlxuLy9cbi8vIFRoZSBhYm92ZSBjb3B5cmlnaHQgbm90aWNlIGFuZCB0aGlzIHBlcm1pc3Npb24gbm90aWNlIHNoYWxsIGJlIGluY2x1ZGVkIGluXG4vLyBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cbi8vXG4vLyBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SXG4vLyBJTVBMSUVELCBJTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSxcbi8vIEZJVE5FU1MgRk9SIEEgUEFSVElDVUxBUiBQVVJQT1NFIEFORCBOT05JTkZSSU5HRU1FTlQuIElOIE5PIEVWRU5UIFNIQUxMIFRIRVxuLy8gQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgREFNQUdFUyBPUiBPVEhFUlxuLy8gTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSxcbi8vIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU5cbi8vIFRIRSBTT0ZUV0FSRS5cblxuaW1wb3J0IHtoYW5kbGVBY3Rpb25zfSBmcm9tICdyZWR1eC1hY3Rpb25zJztcbmltcG9ydCBBY3Rpb25UeXBlcyBmcm9tICdjb25zdGFudHMvYWN0aW9uLXR5cGVzJztcbmltcG9ydCAqIGFzIHVpU3RhdGVVcGRhdGVycyBmcm9tICcuL3VpLXN0YXRlLXVwZGF0ZXJzJztcblxuLyoqXG4gKiBJbXBvcnRhbnQ6IERvIG5vdCByZW5hbWUgYGFjdGlvbkhhbmRsZXJgIG9yIHRoZSBhc3NpZ25tZW50IHBhdHRlcm4gb2YgcHJvcGVydHkgdmFsdWUuXG4gKiBJdCBpcyB1c2VkIHRvIGdlbmVyYXRlIGRvY3VtZW50YXRpb25cbiAqL1xuY29uc3QgYWN0aW9uSGFuZGxlciA9IHtcbiAgW0FjdGlvblR5cGVzLlRPR0dMRV9TSURFX1BBTkVMXTogdWlTdGF0ZVVwZGF0ZXJzLnRvZ2dsZVNpZGVQYW5lbFVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5UT0dHTEVfTU9EQUxdOiB1aVN0YXRlVXBkYXRlcnMudG9nZ2xlTW9kYWxVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU0hPV19FWFBPUlRfRFJPUERPV05dOiB1aVN0YXRlVXBkYXRlcnMuc2hvd0V4cG9ydERyb3Bkb3duVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLkhJREVfRVhQT1JUX0RST1BET1dOXTogdWlTdGF0ZVVwZGF0ZXJzLmhpZGVFeHBvcnREcm9wZG93blVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5PUEVOX0RFTEVURV9NT0RBTF06IHVpU3RhdGVVcGRhdGVycy5vcGVuRGVsZXRlTW9kYWxVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuVE9HR0xFX01BUF9DT05UUk9MXTogdWlTdGF0ZVVwZGF0ZXJzLnRvZ2dsZU1hcENvbnRyb2xVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuQUREX05PVElGSUNBVElPTl06IHVpU3RhdGVVcGRhdGVycy5hZGROb3RpZmljYXRpb25VcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuUkVNT1ZFX05PVElGSUNBVElPTl06IHVpU3RhdGVVcGRhdGVycy5yZW1vdmVOb3RpZmljYXRpb25VcGRhdGVyLFxuXG4gIFtBY3Rpb25UeXBlcy5TRVRfUkFUSU9dOiB1aVN0YXRlVXBkYXRlcnMuc2V0UmF0aW9VcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU0VUX1JFU09MVVRJT05dOiB1aVN0YXRlVXBkYXRlcnMuc2V0UmVzb2x1dGlvblVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5UT0dHTEVfTEVHRU5EXTogdWlTdGF0ZVVwZGF0ZXJzLnRvZ2dsZUxlZ2VuZFVwZGF0ZXIsXG4gIFtBY3Rpb25UeXBlcy5TVEFSVF9FWFBPUlRJTkdfSU1BR0VdOiB1aVN0YXRlVXBkYXRlcnMuc3RhcnRFeHBvcnRpbmdJbWFnZSxcbiAgW0FjdGlvblR5cGVzLlNFVF9FWFBPUlRfSU1BR0VfREFUQV9VUkldOiB1aVN0YXRlVXBkYXRlcnMuc2V0RXhwb3J0SW1hZ2VEYXRhVXJpLFxuICBbQWN0aW9uVHlwZXMuU0VUX0VYUE9SVF9JTUFHRV9FUlJPUl06IHVpU3RhdGVVcGRhdGVycy5zZXRFeHBvcnRJbWFnZUVycm9yLFxuICBbQWN0aW9uVHlwZXMuQ0xFQU5VUF9FWFBPUlRfSU1BR0VdOiB1aVN0YXRlVXBkYXRlcnMuY2xlYW51cEV4cG9ydEltYWdlLFxuXG4gIFtBY3Rpb25UeXBlcy5TRVRfRVhQT1JUX1NFTEVDVEVEX0RBVEFTRVRdOiB1aVN0YXRlVXBkYXRlcnMuc2V0RXhwb3J0U2VsZWN0ZWREYXRhc2V0VXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF9FWFBPUlRfREFUQV9UWVBFXTogdWlTdGF0ZVVwZGF0ZXJzLnNldEV4cG9ydERhdGFUeXBlVXBkYXRlcixcbiAgW0FjdGlvblR5cGVzLlNFVF9FWFBPUlRfRklMVEVSRURdOiB1aVN0YXRlVXBkYXRlcnMuc2V0RXhwb3J0RmlsdGVyZWRVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU0VUX0VYUE9SVF9EQVRBXTogdWlTdGF0ZVVwZGF0ZXJzLnNldEV4cG9ydERhdGFVcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU0VUX1VTRVJfTUFQQk9YX0FDQ0VTU19UT0tFTl06IHVpU3RhdGVVcGRhdGVycy5zZXRVc2VyTWFwYm94QWNjZXNzVG9rZW5VcGRhdGVyLFxuICBbQWN0aW9uVHlwZXMuU0VUX0VYUE9SVF9NQVBfRk9STUFUXTogdWlTdGF0ZVVwZGF0ZXJzLnNldEV4cG9ydE1hcEZvcm1hdFxufTtcblxuLyogUmVkdWNlciAqL1xuZXhwb3J0IGNvbnN0IHVpU3RhdGVSZWR1Y2VyRmFjdG9yeSA9IChpbml0aWFsU3RhdGUgPSB7fSkgPT5cbiAgaGFuZGxlQWN0aW9ucyhhY3Rpb25IYW5kbGVyLCB7Li4udWlTdGF0ZVVwZGF0ZXJzLklOSVRJQUxfVUlfU1RBVEUsIC4uLmluaXRpYWxTdGF0ZSwgaW5pdGlhbFN0YXRlfSk7XG5cbmV4cG9ydCBkZWZhdWx0IHVpU3RhdGVSZWR1Y2VyRmFjdG9yeSgpO1xuIl19